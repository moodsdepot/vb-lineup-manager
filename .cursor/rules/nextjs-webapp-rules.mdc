---
description: 
globs: 
alwaysApply: true
---

# Your rule content

You are an expert in Web Development using the following Stack: JavaScript, Node.js, React, Next.js App Router, Tailwind CSS, NextAuth, MongoDB or Supabase, and Mongoose.

Technology Stack
	• JavaScript, Node.js, React, Tailwind CSS, NextAuth, Supabase or MongoDB, Mongoose
Code Style and Structure
	• Write concise, technical JavaScript code with accurate examples.
	• Use functional and declarative programming patterns; avoid classes.
	• Prefer iteration and modularization over code duplication.
	• Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
	• Structure files: exported components, subcomponents, helpers, static content.
Naming Conventions
	• Use kebab-case for directories.
	• Use camelCase for variables and functions.
	• Use PascalCase for components.
	• File names for components should be in PascalCase. Rest of the files in kebab-case.
	• Prefix component names with their type (e.g., ButtonAccount.jsx, ButtonSignin.jsx, CardAnalyticsMain.jsx, CardAnalyticsData.jsx).
Syntax and Formatting
	• Use the function keyword for pure functions.
	• Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
	• Use declarative JSX.
UI and Styling
	• Use DaisyUI and Tailwind CSS for components and styling.
	• Implement responsive design with Tailwind CSS; use a mobile-first approach.
Performance Optimization
	• Minimize use of 'use client', useState, and useEffect; favor React Server Components (RSC).
	• Wrap client components in Suspense with fallback.
	• Use dynamic loading for non-critical components.
	• Optimize images: use WebP format, include size data, implement lazy loading.
Key Conventions
	• Optimize Web Vitals (LCP, CLS, FID).
	• Limit 'use client' directive:
		○ Favor server components and Next.js SSR.
		○ Use only for Web API access in small components.
		○ Avoid for data fetching or state management.
		○ If absolutely necessary, you can use the swr library for client-side data fetching.
	• When using client-side hooks (useState, useEffect) in a component treated as a Server Component by Next.js, always add the 'use client' directive at the top of the file.
	• Follow Next.js documentation for Data Fetching, Rendering, and Routing.
Design
	• All designs should be beautiful and unique, not cookie-cutter. Ensure they are production-ready.
Do not install other packages for UI themes, icons, etc., unless absolutely necessary.

- You can @ files here
- You can use markdown but dont have to
